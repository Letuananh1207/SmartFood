import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Calendar, Clock, Users, Plus, ChefHat } from "lucide-react";

const MealPlan = () => {
  const [selectedWeek, setSelectedWeek] = useState(new Date());

  const weekDays = [
    "Th·ª© Hai", "Th·ª© Ba", "Th·ª© T∆∞", "Th·ª© NƒÉm", "Th·ª© S√°u", "Th·ª© B·∫£y", "Ch·ªß Nh·∫≠t"
  ];

  const sampleMeals = {
    "Th·ª© Hai": {
      breakfast: { name: "Ph·ªü B√≤", cookTime: "30 ph√∫t", servings: 2 },
      lunch: { name: "C∆°m Rang", cookTime: "20 ph√∫t", servings: 3 },
      dinner: { name: "B√∫n Ch·∫£", cookTime: "45 ph√∫t", servings: 4 }
    },
    "Th·ª© Ba": {
      breakfast: { name: "B√°nh M√¨", cookTime: "10 ph√∫t", servings: 2 },
      lunch: { name: "B√∫n Ri√™u", cookTime: "40 ph√∫t", servings: 3 },
      dinner: { name: "G√† R√°n", cookTime: "35 ph√∫t", servings: 4 }
    },
    "Th·ª© T∆∞": {
      breakfast: { name: "X√¥i G√†", cookTime: "25 ph√∫t", servings: 2 },
      lunch: { name: "M√¨ X√†o", cookTime: "25 ph√∫t", servings: 3 },
      dinner: { name: "L·∫©u Th√°i", cookTime: "60 ph√∫t", servings: 4 }
    },
    "Th·ª© NƒÉm": {
      breakfast: { name: "B√∫n B√≤", cookTime: "35 ph√∫t", servings: 2 },
      lunch: { name: "C∆°m G√†", cookTime: "30 ph√∫t", servings: 3 },
      dinner: { name: "Canh Chua", cookTime: "40 ph√∫t", servings: 4 }
    },
    "Th·ª© S√°u": {
      breakfast: { name: "B√°nh Cu·ªën", cookTime: "40 ph√∫t", servings: 2 },
      lunch: { name: "B√°nh X√®o", cookTime: "35 ph√∫t", servings: 3 },
      dinner: { name: "C√° Kho T·ªô", cookTime: "50 ph√∫t", servings: 4 }
    },
    "Th·ª© B·∫£y": {
      breakfast: { name: "H·ªß Ti·∫øu", cookTime: "30 ph√∫t", servings: 2 },
      lunch: { name: "G·ªèi Cu·ªën", cookTime: "20 ph√∫t", servings: 3 },
      dinner: { name: "Th·ªãt Kho T√†u", cookTime: "55 ph√∫t", servings: 4 }
    },
    "Ch·ªß Nh·∫≠t": {
      breakfast: { name: "·ªêp La", cookTime: "15 ph√∫t", servings: 2 },
      lunch: { name: "B√≤ B√≠a", cookTime: "25 ph√∫t", servings: 3 },
      dinner: { name: "Nem R√°n", cookTime: "45 ph√∫t", servings: 4 }
    },
  };

  return (
    <div className="space-y-8">
      <div className="space-y-2">
        <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
          <Calendar className="h-8 w-8 text-primary" />
          K·∫ø ho·∫°ch b·ªØa ƒÉn
        </h1>
        <p className="text-lg text-gray-600">
          L√™n k·∫ø ho·∫°ch b·ªØa ƒÉn cho tu·∫ßn ƒë·ªÉ ti·∫øt ki·ªám th·ªùi gian v√† chi ph√≠
        </p>
      </div>

      {/* Week Navigation */}
      <Card>
        <CardHeader>
          <CardTitle>Tu·∫ßn hi·ªán t·∫°i</CardTitle>
          <CardDescription>
            Ch·ªçn tu·∫ßn ƒë·ªÉ xem ho·∫∑c ch·ªânh s·ª≠a k·∫ø ho·∫°ch b·ªØa ƒÉn
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex items-center justify-between">
            <Button variant="outline">
              ‚Üê Tu·∫ßn tr∆∞·ªõc
            </Button>
            <span className="text-lg font-semibold">
              Tu·∫ßn 1, Th√°ng 6 2025
            </span>
            <Button variant="outline">
              Tu·∫ßn sau ‚Üí
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Weekly Meal Plan Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-7 gap-4">
        {weekDays.map((day, index) => (
          <Card key={day} className="min-h-[400px]">
            <CardHeader className="pb-3">
              <CardTitle className="text-lg">{day}</CardTitle>
              <CardDescription className="text-sm">
                {new Date(Date.now() + index * 24 * 60 * 60 * 1000).toLocaleDateString('vi-VN')}
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              {/* Breakfast */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <h4 className="font-medium text-sm">S√°ng</h4>
                  <Badge variant="secondary" className="text-xs">üåÖ</Badge>
                </div>
                {sampleMeals[day as keyof typeof sampleMeals]?.breakfast ? (
                  <div className="p-3 bg-gray-50 rounded-lg">
                    <p className="font-medium text-sm">
                      {sampleMeals[day as keyof typeof sampleMeals].breakfast.name}
                    </p>
                    <div className="flex items-center gap-2 mt-1 text-xs text-gray-600">
                      <Clock className="h-3 w-3" />
                      {sampleMeals[day as keyof typeof sampleMeals].breakfast.cookTime}
                      <Users className="h-3 w-3 ml-2" />
                      {sampleMeals[day as keyof typeof sampleMeals].breakfast.servings} ng∆∞·ªùi
                    </div>
                  </div>
                ) : (
                  <Button variant="ghost" size="sm" className="w-full justify-start h-auto p-3 border-2 border-dashed">
                    <Plus className="h-4 w-4 mr-2" />
                    Th√™m m√≥n ƒÉn s√°ng
                  </Button>
                )}
              </div>

              {/* Lunch */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <h4 className="font-medium text-sm">Tr∆∞a</h4>
                  <Badge variant="secondary" className="text-xs">‚òÄÔ∏è</Badge>
                </div>
                {sampleMeals[day as keyof typeof sampleMeals]?.lunch ? (
                  <div className="p-3 bg-gray-50 rounded-lg">
                    <p className="font-medium text-sm">
                      {sampleMeals[day as keyof typeof sampleMeals].lunch.name}
                    </p>
                    <div className="flex items-center gap-2 mt-1 text-xs text-gray-600">
                      <Clock className="h-3 w-3" />
                      {sampleMeals[day as keyof typeof sampleMeals].lunch.cookTime}
                      <Users className="h-3 w-3 ml-2" />
                      {sampleMeals[day as keyof typeof sampleMeals].lunch.servings} ng∆∞·ªùi
                    </div>
                  </div>
                ) : (
                  <Button variant="ghost" size="sm" className="w-full justify-start h-auto p-3 border-2 border-dashed">
                    <Plus className="h-4 w-4 mr-2" />
                    Th√™m m√≥n ƒÉn tr∆∞a
                  </Button>
                )}
              </div>

              {/* Dinner */}
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <h4 className="font-medium text-sm">T·ªëi</h4>
                  <Badge variant="secondary" className="text-xs">üåô</Badge>
                </div>
                {sampleMeals[day as keyof typeof sampleMeals]?.dinner ? (
                  <div className="p-3 bg-gray-50 rounded-lg">
                    <p className="font-medium text-sm">
                      {sampleMeals[day as keyof typeof sampleMeals].dinner.name}
                    </p>
                    <div className="flex items-center gap-2 mt-1 text-xs text-gray-600">
                      <Clock className="h-3 w-3" />
                      {sampleMeals[day as keyof typeof sampleMeals].dinner.cookTime}
                      <Users className="h-3 w-3 ml-2" />
                      {sampleMeals[day as keyof typeof sampleMeals].dinner.servings} ng∆∞·ªùi
                    </div>
                  </div>
                ) : (
                  <Button variant="ghost" size="sm" className="w-full justify-start h-auto p-3 border-2 border-dashed">
                    <Plus className="h-4 w-4 mr-2" />
                    Th√™m m√≥n ƒÉn t·ªëi
                  </Button>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Quick Actions */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <ChefHat className="h-5 w-5" />
            Thao t√°c nhanh
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex flex-wrap gap-4">
            <Button>
              T·∫°o k·∫ø ho·∫°ch t·ª± ƒë·ªông
            </Button>
            <Button variant="outline">
              Sao ch√©p t·ª´ tu·∫ßn tr∆∞·ªõc
            </Button>
            <Button variant="outline">
              T·∫°o danh s√°ch mua s·∫Øm
            </Button>
            <Button variant="outline">
              Xu·∫•t th·ª±c ƒë∆°n
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default MealPlan;
